{"version":3,"sources":["constants/quotes.ts","reducers/quotes.ts","reducers/index.ts","store/index.ts","img/The_Simpsons_Logo.png","components/layouts/brand/Brand.tsx","components/elements/hoc/Collapse.tsx","components/layouts/landing/Nav.tsx","components/layouts/landing/Footer.tsx","components/layouts/landing/Layout.tsx","components/landing/Landing.tsx","actions/quotes.ts","components/elements/hoc/Search.tsx","components/elements/searchInput/SearchQuotesInput.tsx","components/layouts/quotes/Nav.tsx","components/layouts/quotes/Layout.tsx","components/quotes/SideFilters.tsx","components/elements/card/Card.tsx","components/quotes/QuotesMobileSearch.tsx","components/quotes/QuotesContainer.tsx","img/professor-frink.png","components/elements/noResults/NoResults.tsx","components/quotes/Quotes.tsx","AppRouter.tsx","reportWebVitals.ts","index.tsx"],"names":["FETCHING_QUOTES","FETCHED_QUOTES","APPEND_QUOTES","RESET_REQUEST","initialState","fetching","data","maxRequest","query","quotes","state","action","type","payload","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","composedEnhancers","applyMiddleware","thunk","store","createStore","reducers","Brand","to","className","src","logo","alt","HocCollapse","WrappedComponent","props","useState","isNavCollapsed","setIsNavCollapsed","handleNavCollapse","Collapse","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","id","href","Footer","Layout","children","Landing","Component","fetchQuotes","limit","append","dispatch","getState","stateData","fetchingQuotes","quotesRequest","then","undefined","filteredQuotes","filterQuotesByQuery","uniquesQuotesObject","uniquesQuotes","appendQuotes","quotesFetched","filterQuotes","currentQuotes","url","URL","search","URLSearchParams","toString","fetch","response","ok","json","Error","statusText","catch","error","console","resetRequest","filter","quote","character","toLowerCase","indexOf","newQuotes","oldQuotes","flatterQuotes","map","includes","Search","Child","SearchQuotes","displayName","connect","placeholder","onKeyPress","event","key","preventDefault","target","value","SideFilters","this","renderFilterNames","names","Set","name","filterClick","Card","image","title","content","QuotesMobileSearch","QuotesContainer","showResultsLegend","index","length","NoResults","frink","Quotes","prevProps","prevState","snapshot","requiredLimit","params","AppRouter","exact","path","component","render","pathname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"ygBAAaA,EAAkB,kBAClBC,EAAiB,iBACjBC,EAAgB,gBAEhBC,EAAgB,gBCFvBC,EAAe,CACjBC,UAAU,EACVC,KAAM,GACNC,WAAY,EACZC,MAAO,IAkCIC,MA/Bf,WAAqD,IAApCC,EAAmC,uDAA3BN,EAAcO,EAAa,uCAChD,OAAQA,EAAOC,MACX,KAAKZ,EACD,OAAO,2BACAU,GADP,IAEIL,UAAU,IAElB,KAAKJ,EACD,OAAO,2BACAS,GADP,IAEIL,UAAU,EACVC,KAAMK,EAAOE,QAAQJ,OACrBD,MAAOG,EAAOE,QAAQL,QAE9B,KAAKN,EACD,OAAO,2BACAQ,GADP,IAEIL,UAAU,EACVC,KAAK,GAAD,mBAAMI,EAAMJ,MAAZ,YAAqBK,EAAOE,UAChCN,aAAcG,EAAMH,aAE5B,KAAKJ,EACD,OAAO,2BACAO,GADP,IAEIH,WAAYH,EAAaG,aAEjC,QACI,OAAOG,ICjCJI,cAAgB,CAC3BL,WCEEM,EAAmBC,OAAOC,sCAAwCC,IAMlEC,EAAoBD,YAAQE,YAAgBC,KAAQN,KAE7CO,EAAQC,YAAYC,EAAU,GAAIL,G,gCCdhC,MAA0B,8CCa1BM,G,MARD,WACV,OACI,cAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,mCAAvB,SACI,qBAAKC,IAAKC,EAAMC,IAAI,cAAcH,UAAU,kB,gBCQzCI,EAdK,SAACC,GAWjB,OARiB,SAAC,GAAgB,IAAZC,EAAW,sBACeC,oBAAS,GADxB,mBACtBC,EADsB,KACNC,EADM,KAI7B,OAAO,cAACJ,EAAD,2BAAsBC,GAAtB,IAA6BI,kBAFV,kBAAMD,GAAmBD,IAEuBA,eAAgBA,OC0BnFG,KA7BH,SAAAL,GAAU,IACbI,EAAqCJ,EAArCI,kBAAmBF,EAAkBF,EAAlBE,eAExB,OACI,yBAAQR,UAAU,qDAAlB,UACI,cAAC,EAAD,IACA,wBAAQA,UAAU,iBAAiBf,KAAK,SAAS2B,cAAY,WACrDC,cAAY,0BAA0BC,gBAAc,yBAAyBC,iBAAgBP,EAC7FQ,aAAW,oBAAoBC,QAASP,EAFhD,SAGI,sBAAMV,UAAU,0BAGpB,qBAAKA,UAAS,UAAKQ,EAAiB,WAAY,GAAlC,oCAAwEU,GAAG,yBAAzF,SACI,qBAAIlB,UAAU,qBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMD,GAAG,UAAUC,UAAU,WAA7B,sBAEJ,oBAAIA,UAAU,WAAd,SACI,mBAAGmB,KAAK,KAAKnB,UAAU,WAAvB,0BAEJ,oBAAIA,UAAU,WAAd,SACI,wBAAQA,UAAU,iDAAiDf,KAAK,SAAxE,4CChBTmC,G,MARA,WACX,OACI,wBAAQpB,UAAU,SAAlB,6BCeOqB,G,MAdA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACb,OACI,sBAAKtB,UAAU,uCAAf,UACI,cAAC,EAAD,IACCsB,EACD,cAAC,EAAD,SCWGC,G,6KAfP,OACI,cAAC,EAAD,UACI,qBAAKvB,UAAU,2BAAf,SACI,uBAAMA,UAAU,kCAAhB,UACI,oBAAIA,UAAU,YAAd,qEAGA,cAAC,IAAD,CAAMD,GAAG,UAAUC,UAAU,6BAA7B,+B,GATFwB,cCUTC,EAAc,SAAC,GAA4E,IAAD,IAA1E5C,aAA0E,MAAlE,GAAkE,MAA9D6C,aAA8D,MXP3E,GWO2E,MAAxCC,cAAwC,SACnG,OAAO,SAACC,EAAeC,GACnB,IAAI9C,EAAQ8C,IACRC,EAAY,GAChBF,EAASG,KACLJ,IACAG,EAAY/C,EAAMD,OAAOH,MAE7BqD,EAAc,CAACnD,QAAM6C,UACpBO,MAAK,SAACnD,GACH,QAAeoD,IAAXpD,EAAsB,CACtB,IAAIqD,EAAiBC,EAAoBtD,EAAQD,GAC7CwD,EAAsBC,EAAcH,EAAgBL,GAEpDF,EADAD,EACSY,EAAaF,GAEbG,EAAcH,EAAqBxD,UAOnD4D,EAAe,SAAC5D,GAC3B,OAAO,SAAC+C,EAAeC,GAEnB,GADAD,EAASG,KACK,KAAVlD,EACA+C,EAASY,EAAc,GAAI3D,QACxB,CACH,IAAI6D,EAAgBb,IAAW/C,OAAOH,KAClCwD,EAAiBC,EAAoBM,EAAe7D,GACxD+C,EAASY,EAAcL,EAAgBtD,OAK3CmD,EAAgB,SAAC,GAA2D,EAA1DnD,MAA2D,IAAD,IAA9C6C,aAA8C,MX3CtD,GW2CsD,EAC1EiB,EAAM,IAAIC,IX9CK,gDWgDnB,OADAD,EAAIE,OAAS,IAAIC,gBAAgB,CAAC,MAASpB,EAAMqB,aAAaA,WACvDC,MAAML,EAAII,YAChBd,MAAK,SAACgB,GACH,GAAIA,EAASC,GACT,OAAOD,EAASE,OAEhB,MAAMC,MAAMH,EAASI,eAG5BpB,MAAK,SAACnD,GACH,OAAOA,KAEVwE,OAAM,SAACC,GACLC,QAAQD,MAAMA,OAIfxB,EAAiB,iBAAO,CAC1B9C,KAAMZ,IAGGoF,EAAe,iBAAO,CAC/BxE,KAAMT,IAGJgE,EAAgB,SAAC1D,EAAaD,GAAd,MAAiC,CACpDI,KAAMX,EACNY,QAAS,CACLJ,SACAD,WAID0D,EAAe,SAACzD,GAAD,MAAkB,CACnCG,KAAMV,EACNW,QAASJ,IAIPsD,EAAsB,SAACtD,EAAoBD,GAArB,OAAuCC,EAAO4E,QAAO,SAACC,GAC9E,OAAyD,IAAlDA,EAAMC,UAAUC,cAAcC,QAAQjF,OAG3CyD,EAAgB,SAACyB,EAAgBC,GACpC,IAAIC,EAAgBD,EAAUE,KAAI,SAACP,GAAD,OAAWA,EAAMA,SAClD,OAAOI,EAAUL,QAAO,SAACC,GAAD,OAAYM,EAAcE,SAASR,EAAMA,WCpFtDS,EAVA,SAACC,GACZ,IAAMC,EAAe,SAAChE,GAClB,OAAO,cAAC+D,EAAD,eAAW/D,KAKtB,OAFAgE,EAAaC,YAAc,sBAEpBC,YAAQ,KAAM,CAAC/C,cAAagB,eAAcgB,gBAA1Ce,CAAyDF,ICgBrDF,G,MAAAA,GAtBW,SAAA9D,GAUtB,OACI,mCACI,uBAAON,UAAU,2CAA2Cf,KAAK,OAAOwF,YAAY,SAASzD,aAAW,SAAS0D,WAXzH,SAAoBC,GAChB,GAAkB,UAAdA,EAAMC,IAAiB,CACvBD,EAAME,iBACN,IAAIhG,EAAQ8F,EAAMG,OAAOC,MACzBzE,EAAMmD,eACNnD,EAAMmC,aAAa5D,aC6BhB8B,G,MAAAA,GAjCH,SAACL,GAAW,IAEfI,EAAqCJ,EAArCI,kBAAmBF,EAAkBF,EAAlBE,eAExB,OACI,yBAAQR,UAAU,gDAAlB,UACI,cAAC,EAAD,IACA,wBAAQA,UAAU,iBAAiBf,KAAK,SAAS2B,cAAY,WAAWC,cAAY,YAAYC,gBAAc,yBAAyBC,iBAAgBP,EAC/IQ,aAAW,oBAAoBC,QAASP,EADhD,SAEI,sBAAMV,UAAU,0BAGpB,sBAAKA,UAAS,UAAKQ,EAAiB,WAAY,GAAlC,2CAA+EU,GAAG,WAAhG,UACI,sBAAMlB,UAAU,wCAAhB,SACI,cAAC,EAAD,MAEJ,qBAAIA,UAAU,qBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMD,GAAG,IAAIC,UAAU,WAAWmB,KAAK,IAAvC,sBAEJ,oBAAInB,UAAU,kBAAd,SACI,cAAC,IAAD,CAAMD,GAAG,IAAIC,UAAU,WAAWmB,KAAK,IAAvC,sBAEJ,oBAAInB,UAAU,WAAd,SACA,wBAAQA,UAAU,oDAAoDf,KAAK,SAA3E,8CCdLoC,EAbA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACb,OACI,qCACI,cAAC,EAAD,IACCA,MCIP0D,G,6KAGE,OACI,qBAAKhF,UAAU,yDAAf,SACI,qBAAKA,UAAU,sBAAf,SACA,qBAAKA,UAAU,iBAAf,SACI,qBAAIA,UAAU,gBAAd,UACI,6BACI,oBAAIA,UAAU,aAAd,0BAEHiF,KAAKC,+B,0CAQL,IAAD,OAEZC,EADWF,KAAK3E,MAAfxB,OACcoF,KAAI,SAACP,GAAD,OAAWA,EAAMC,aAExC,OADAuB,EAAK,YAAO,IAAIC,IAAID,KACPjB,KAAI,SAACmB,GAAD,OAAU,mCAAgB,sBAAMrF,UAAU,oBAAoBiB,QAAS,kBAAM,EAAKqE,YAAYD,IAApE,SAA4EA,MAAnFA,Q,kCAG5BA,GACRJ,KAAK3E,MAAMmD,eACXwB,KAAK3E,MAAMmC,aAAa4C,EAAKxB,mB,GA5BXrC,cAsCX4C,IAAOI,aANE,SAACzF,GACrB,MAAO,CACHD,OAAQC,EAAMD,OAAOH,QAIP6F,CAAyBQ,ICtBhCO,G,MAxBF,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACzB,OACI,qBAAK1F,UAAU,gDAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKuF,EAAOrF,IAAKsF,EAAOzF,UAAU,iBACvC,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SACKyF,IAEL,mBAAGzF,UAAU,YAAb,SACK0F,cCDVC,G,MAVY,WACvB,OACI,qBAAK3F,UAAU,wBAAf,SACI,qBAAKA,UAAU,uBAAf,SACI,cAAC,EAAD,UCIV4F,G,uKACQ,IACD9G,EAAUmG,KAAK3E,MAAfxB,OACL,OACI,sBAAKkB,UAAW,4BAAhB,UACI,cAAC,EAAD,IACA,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,uBAAf,SACKiF,KAAKY,wBAGd,qBAAK7F,UAAU,MAAf,SACKlB,EAAOoF,KAAI,SAACP,EAAYmC,GAAb,OAAuB,cAAC,EAAD,CAAkBN,MAAO7B,EAAM6B,MAAOC,MAAO9B,EAAMC,UAAW8B,QAAS/B,EAAMA,OAAlEmC,a,0CAMzC,IAAD,EACMb,KAAK3E,MAAtBxB,EADW,EACXA,OAAQD,EADG,EACHA,MACb,GAAIC,EAAOiH,OACP,MAAM,iBAAN,OAAwBjH,EAAOiH,OAA/B,YAAmD,KAAVlH,EAAA,2BAAmCA,EAAnC,KAA8C,Q,GArBrE2C,aAgCfgD,gBANS,SAACzF,GACrB,MAAO,CACHF,MAAOE,EAAMD,OAAOD,SAIb2F,CAAyBoB,IC3CzB,OAA0B,4CCY1BI,I,MARG,WACd,OACI,qBAAKhG,UAAU,6BAAf,SACI,qBAAKC,IAAKgG,GAAO9F,IAAI,GAAGH,UAAU,kBCWxCkG,G,uKACQ,IAAD,EACoBjB,KAAK3E,MAAzBxB,EADA,EACAA,OAAQJ,EADR,EACQA,SACb,OACI,cAAC,EAAD,UACI,qBAAKsB,UAAU,+BAAf,SACI,sBAAKA,UAAW,MAAhB,UACI,cAAC,EAAD,IACClB,EAAOiH,QAAUrH,EAAW,cAAC,GAAD,CAAiBI,OAAQA,IAAa,cAAC,GAAD,a,0CAOlE,IACZD,EAASoG,KAAK3E,MAAdzB,MAELoG,KAAK3E,MAAMmB,YAAY,CAAC5C,MAAOA,M,yCAGhBsH,EAA8BC,EAAyBC,GAAiB,IAAD,EACjDpB,KAAK3E,MAArCxB,EADiF,EACjFA,OAAQF,EADyE,EACzEA,WAAYF,EAD6D,EAC7DA,SACpBG,EAASoG,KAAK3E,MAAdzB,MAWL,IAAKH,GAAYI,EAAOiH,OtB5CJ,IsB4C6BnH,EtB3C9B,EsB2CwD,CACvE,IAAI0H,EtB7CY,GsB6CmBxH,EAAOiH,OAC1Cd,KAAK3E,MAAMmB,YAAY,CAAC5C,MAAOA,EAAO6C,MAAO4E,EAAe3E,QAAQ,S,GApC3DH,aAyDNgD,gBAhBS,SAACzF,GACrB,MAAO,CACHD,OAAQC,EAAMD,OAAOH,KACrBC,WAAYG,EAAMD,OAAOF,WACzBC,MAAOE,EAAMD,OAAOD,MACpBH,SAAUK,EAAMD,OAAOJ,aAIJ,SAACkD,GACxB,MAAO,CACLH,YAAa,SAAC8E,GAAD,OAAgC3E,EAASH,EAAY8E,QAKzD/B,CAA6C0B,ICpD7CM,OAdf,WACI,OACI,cAAC,IAAD,CAAU7G,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO8G,OAAK,EAACC,KAAM,kBAAmBC,UAAWT,KACjD,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAM,IAAKC,UAAWpF,IACnC,cAAC,IAAD,CAAOkF,OAAK,EAACG,OAAQ,kBAAM,cAAC,IAAD,CAAU7G,GAAI,CAAC8G,SAAU,kBCFzDC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB/E,MAAK,YAAkD,IAA/CgF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.3603808c.chunk.js","sourcesContent":["export const FETCHING_QUOTES = 'FETCHING_QUOTES';\nexport const FETCHED_QUOTES = 'FETCHED_QUOTES';\nexport const APPEND_QUOTES = 'APPEND_QUOTES';\n\nexport const RESET_REQUEST = 'RESET_REQUEST';\n\nexport const API_URL = \"https://thesimpsonsquoteapi.glitch.me/quotes\";\n// export const API_URL = \"http://localhost:3000/mock.json\";\nexport const LIMIT_QUOTES = 15;\nexport const MAX_REQUEST = 5;\n","import {APPEND_QUOTES, FETCHED_QUOTES, FETCHING_QUOTES, RESET_REQUEST} from \"../constants/quotes\";\n\nconst initialState = {\n    fetching: true,\n    data: [],\n    maxRequest: 1,\n    query: \"\"\n};\n\nfunction quotes (state = initialState, action: any) {\n    switch (action.type) {\n        case FETCHING_QUOTES:\n            return {\n                ...state,\n                fetching: true,\n            };\n        case FETCHED_QUOTES:\n            return {\n                ...state,\n                fetching: false,\n                data: action.payload.quotes,\n                query: action.payload.query\n            };\n        case APPEND_QUOTES:\n            return {\n                ...state,\n                fetching: false,\n                data: [...state.data, ...action.payload],\n                maxRequest: ++state.maxRequest\n            };\n        case RESET_REQUEST:\n            return {\n                ...state,\n                maxRequest: initialState.maxRequest\n            };\n        default:\n            return state;\n    }\n};\n\nexport default quotes;","import { combineReducers } from \"redux\";\nimport quotes from \"./quotes\";\n\nexport default combineReducers({\n    quotes\n});","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk';\n\nimport reducers from '../reducers';\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n/**\n * param1: middleware necesario para hacer llamadas asincronas en el actionCreator (actions folder)\n * param2: herramienta para debuggear aplicaciones de react en el devTool del navegador\n */\nconst composedEnhancers = compose(applyMiddleware(thunk), composeEnhancers());\n\nexport const store = createStore(reducers, {}, composedEnhancers);","export default __webpack_public_path__ + \"static/media/The_Simpsons_Logo.816fe84b.png\";","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport logo from \"../../../img/The_Simpsons_Logo.png\";\nimport \"./Brand.scss\";\n\nconst Brand = () => {\n    return (\n        <Link to=\"/\" className=\"navbar-brand custom-navbar-brand\">\n            <img src={logo} alt=\"The simpson\" className=\"brand-img\" />\n        </Link>\n    );\n};\n\nexport default Brand;\n","import React, {useState} from 'react'\n\nconst HocCollapse = (WrappedComponent) => {\n\n\n    const Collapse = ({...props}) => {\n        const [isNavCollapsed, setIsNavCollapsed] = useState(true);\n        const handleNavCollapse = () => setIsNavCollapsed(!isNavCollapsed);\n\n        return <WrappedComponent {...props} handleNavCollapse={handleNavCollapse} isNavCollapsed={isNavCollapsed}  />\n    }\n\n\n    return Collapse\n}\n\nexport default HocCollapse;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport Brand from \"../brand/Brand\";\nimport \"./Nav.scss\";\nimport Collapse from \"../../elements/hoc/Collapse\";\n\nconst Nav = props => {\n    let {handleNavCollapse, isNavCollapsed} = props;\n\n    return (\n        <header className=\"navbar navbar-expand-lg navbar-light custom-navbar\">\n            <Brand />\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                    data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded={!isNavCollapsed}\n                    aria-label=\"Toggle navigation\" onClick={handleNavCollapse}>\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className={`${isNavCollapsed ? 'collapse': ''} navbar-collapse custom-collapse`} id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/quotes\" className=\"nav-link\">Frases</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a href=\"/#\" className=\"nav-link\">Personajes</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <button className=\"btn btn-primary my-2 my-sm-0 custom-nav-button\" type=\"submit\">Iniciar sesión</button>\n                    </li>\n                </ul>\n            </div>\n        </header>\n    );\n};\n\nexport default Collapse(Nav);\n","import React from 'react';\nimport \"./Footer.scss\";\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            © Paisanos\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Nav from \"./Nav\";\nimport Footer from \"./Footer\";\nimport \"./Layout.scss\";\n\nconst Layout = ({children}) => {\n    return (\n        <div className=\"container-fluid p-0 layout-container\">\n            <Nav />\n            {children}\n            <Footer />\n        </div>\n    );\n};\n\nLayout.propTypes = {\n    children: PropTypes.element.isRequired\n};\n\nexport default Layout;\n","import React, {Component} from 'react';\nimport Layout from \"../layouts/landing/Layout\";\nimport \"./Landing.scss\";\nimport {Link} from \"react-router-dom\";\n\nclass Landing extends Component {\n    render() {\n        return (\n            <Layout>\n                <div className=\"col-12 landing-container\">\n                    <span className=\"hero-text-container text-center\">\n                        <h2 className=\"hero-text\">\n                            ¡Encontrá las frases de tus personajes favoritos!\n                        </h2>\n                        <Link to=\"/quotes\" className=\"btn btn-primary custom-btn\">Buscar</Link>\n                    </span>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default Landing;","import {\n    API_URL,\n    APPEND_QUOTES,\n    FETCHED_QUOTES,\n    FETCHING_QUOTES,\n    LIMIT_QUOTES,\n    RESET_REQUEST\n} from \"../constants/quotes\";\n\nexport interface IFetchQuotesParams {\n    query?: string\n    limit?: number\n    append?: boolean\n}\n\nexport const fetchQuotes = ({query = \"\", limit = LIMIT_QUOTES, append = false}: IFetchQuotesParams) => {\n    return (dispatch: any, getState: Function) => {\n        let state = getState();\n        let stateData = [];\n        dispatch(fetchingQuotes());\n        if (append) {\n            stateData = state.quotes.data;\n        }\n        quotesRequest({query,limit})\n        .then((quotes) => {\n            if (quotes !== undefined) {\n                let filteredQuotes = filterQuotesByQuery(quotes, query);\n                let uniquesQuotesObject = uniquesQuotes(filteredQuotes, stateData);\n                if (append) {\n                    dispatch(appendQuotes(uniquesQuotesObject));\n                } else {\n                    dispatch(quotesFetched(uniquesQuotesObject, query));\n                }\n            }\n        });\n    };\n};\n\nexport const filterQuotes = (query) => {\n  return (dispatch: any, getState: Function) => {\n      dispatch(fetchingQuotes());\n      if (query === \"\") {\n          dispatch(quotesFetched([], query));\n      } else {\n          let currentQuotes = getState().quotes.data;\n          let filteredQuotes = filterQuotesByQuery(currentQuotes, query);\n          dispatch(quotesFetched(filteredQuotes, query));\n      }\n  }\n};\n\nconst quotesRequest = ({query = \"\", limit = LIMIT_QUOTES}: IFetchQuotesParams) => {\n    let url = new URL(API_URL);\n    url.search = new URLSearchParams({\"count\": limit.toString()}).toString();\n    return fetch(url.toString())\n    .then((response) => {\n        if (response.ok) {\n            return response.json();\n        } else {\n            throw Error(response.statusText);\n        }\n    })\n    .then((quotes) => {\n        return quotes;\n    })\n    .catch((error) => {\n       console.error(error);\n    });\n};\n\nconst fetchingQuotes = () => ({\n    type: FETCHING_QUOTES\n});\n\nexport const resetRequest = () => ({\n    type: RESET_REQUEST\n});\n\nconst quotesFetched = (quotes: any, query: string) => ({\n   type: FETCHED_QUOTES,\n   payload: {\n       quotes,\n       query\n   }\n});\n\nconst appendQuotes = (quotes: any) => ({\n    type: APPEND_QUOTES,\n    payload: quotes\n});\n\n\nconst filterQuotesByQuery = (quotes: Array<any>, query: string) => quotes.filter((quote) => {\n    return quote.character.toLowerCase().indexOf(query) !== -1;\n});\n\nconst uniquesQuotes = (newQuotes: any, oldQuotes: any) => {\n   let flatterQuotes = oldQuotes.map((quote) => quote.quote);\n    return newQuotes.filter((quote) => !flatterQuotes.includes(quote.quote));\n};","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {fetchQuotes, filterQuotes, resetRequest} from \"../../../actions/quotes\";\n\nconst Search = (Child) => {\n    const SearchQuotes = (props) => {\n        return <Child {...props} />;\n    }\n\n    SearchQuotes.displayName = \"SearchQuotes(Child)\";\n\n    return connect(null, {fetchQuotes, filterQuotes, resetRequest})(SearchQuotes);\n}\n\nexport default Search;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Search from \"../hoc/Search\";\nimport \"./SearchQuotesInput.scss\";\n\nconst SearchQuotesInput = props => {\n    function onkeypress(event) {\n        if (event.key === \"Enter\") {\n            event.preventDefault();\n            let query = event.target.value;\n            props.resetRequest();\n            props.filterQuotes(query);\n        }\n    }\n\n    return (\n        <>\n            <input className=\"form-control mr-sm-2 search-quotes-input\" type=\"text\" placeholder=\"Buscar\" aria-label=\"Buscar\" onKeyPress={onkeypress}/>\n        </>\n    );\n\n};\n\nSearchQuotesInput.propTypes = {\n    fetchQuotes: PropTypes.func.isRequired,\n};\n\nexport default Search(SearchQuotesInput);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SearchQuotesInput from \"../../elements/searchInput/SearchQuotesInput\";\nimport Brand from \"../brand/Brand\";\nimport \"./Nav.scss\";\nimport Collapse from \"../../elements/hoc/Collapse\";\n\nconst Nav = (props) => {\n\n    let {handleNavCollapse, isNavCollapsed} = props;\n\n    return (\n        <header className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Brand />\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mainMenu\" aria-controls=\"navbarSupportedContent\" aria-expanded={!isNavCollapsed}\n                    aria-label=\"Toggle navigation\" onClick={handleNavCollapse}>\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className={`${isNavCollapsed ? 'collapse': ''} navbar-collapse custom-search-collapse`} id=\"mainMenu\">\n                <form className=\"navbar-form ml-auto d-none d-lg-block\">\n                    <SearchQuotesInput />\n                </form>\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\" href=\"#\">Inicio</Link>\n                    </li>\n                    <li className=\"nav-item active\">\n                        <Link to=\"/\" className=\"nav-link\" href=\"#\">Frases</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                    <button className=\"btn btn-primary my-2 my-sm-0 custom-search-button\" type=\"submit\">Iniciar sesión</button>\n                </li>\n                </ul>\n\n            </div>\n        </header>\n    );\n};\n\nexport default Collapse(Nav);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Nav from \"./Nav\";\n\nconst Layout = ({children}) => {\n    return (\n        <>\n            <Nav/>\n            {children}\n        </>\n    );\n};\n\nLayout.propTypes = {\n    children: PropTypes.element.isRequired\n};\n\nexport default Layout;\n","import React, {Component} from 'react';\nimport \"./SideFilters.scss\";\nimport {connect} from \"react-redux\";\nimport Search from \"../elements/hoc/Search\";\n\ninterface ISideFilters {\n    quotes: Array<any>\n    fetchQuotes: Function\n    filterQuotes: Function\n    resetRequest: Function\n}\n\nclass SideFilters extends Component<ISideFilters> {\n    render() {\n        //\n        return (\n            <div className=\"col-3 col-xl-2 d-none d-lg-block side-filter-container\">\n                <div className=\"row side-filter-row\">\n                <div className=\"col-8 offset-2\">\n                    <ul className=\"list-unstyled\">\n                        <li>\n                            <h5 className=\"list-title\">Personajes</h5>\n                        </li>\n                        {this.renderFilterNames()}\n                    </ul>\n                </div>\n            </div>\n            </div>\n        );\n    }\n\n    renderFilterNames() {\n        let {quotes} = this.props;\n        let names = quotes.map((quote) => quote.character);\n        names = [...new Set(names)];\n        return names.map((name) => <li key={name}> <span className=\"characters-filter\" onClick={() => this.filterClick(name)}>{name}</span></li>);\n    }\n\n    filterClick(name) {\n        this.props.resetRequest();\n        this.props.filterQuotes(name.toLowerCase());\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        quotes: state.quotes.data\n    }\n};\n\nexport default Search(connect(mapStateToProps)(SideFilters));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport \"./Card.scss\";\n\nconst Card = ({image, title, content}) => {\n    return (\n        <div className=\"col-12 col-sm-6 col-md-4 col-xl-3 custom-card\">\n            <div className=\"card\">\n                <img src={image} alt={title} className=\"card-img-top\"/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">\n                        {title}\n                    </h5>\n                    <p className=\"card-text\">\n                        {content}\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nCard.propTypes = {\n    image: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired\n};\n\nexport default Card;\n","import React from 'react';\nimport SearchQuotesInput from \"../elements/searchInput/SearchQuotesInput\";\n\nconst QuotesMobileSearch = () => {\n    return (\n        <div className=\"row d-block d-lg-none\">\n            <div className=\"col-12 mobile-filter\">\n                <SearchQuotesInput />\n            </div>\n        </div>\n    );\n};\n\nexport default QuotesMobileSearch;\n","import React, {Component} from 'react';\nimport Card from \"../elements/card/Card\";\nimport {connect} from \"react-redux\";\nimport \"./QuotesContainer.scss\";\nimport QuotesMobileSearch from \"./QuotesMobileSearch\";\n\ninterface IQuotesContainer {\n    quotes: Array<any>\n    query: string\n}\n\nclass QuotesContainer extends Component<IQuotesContainer> {\n    render() {\n        let {quotes} = this.props;\n        return (\n            <div className={\"col-12 col-lg-9 col-xl-10\"}>\n                <QuotesMobileSearch />\n                <div className=\"row\">\n                    <div className=\"col-12 result-legend\">\n                        {this.showResultsLegend()}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {quotes.map((quote: any, index) => <Card key={index} image={quote.image} title={quote.character} content={quote.quote} />)}\n                </div>\n            </div>\n        );\n    }\n\n    showResultsLegend() {\n        let {quotes, query} = this.props;\n        if (quotes.length) {\n            return `Mostrando 1 - ${quotes.length} ${query !== \"\" ? `resultados para \"${query}\"` : \"\"}`;\n        }\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        query: state.quotes.query\n    }\n};\n\nexport default connect(mapStateToProps)(QuotesContainer);","export default __webpack_public_path__ + \"static/media/professor-frink.4cbc4ee0.png\";","import React from 'react';\nimport frink from '../../../img/professor-frink.png';\nimport './noResults.scss';\n\nconst NoResults = () => {\n    return (\n        <div className=\"col-12 col-lg-10 no-result\">\n            <img src={frink} alt=\"\" className=\"frink-img\"/>\n        </div>\n    );\n};\n\nexport default NoResults;\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {fetchQuotes, IFetchQuotesParams} from \"../../actions/quotes\";\nimport {LIMIT_QUOTES, MAX_REQUEST} from \"../../constants/quotes\";\nimport Layout from \"../layouts/quotes/Layout\";\nimport SideFilters from \"./SideFilters\";\nimport QuotesContainer from \"./QuotesContainer\";\nimport NoResults from \"../elements/noResults/NoResults\";\n\ninterface IQuotes {\n    match:any // prop agregada para obtener parámetros por url\n    fetchQuotes: Function\n    quotes: Array<object>\n    maxRequest: number\n    query: string\n    fetching: boolean\n}\n\nclass Quotes extends Component<IQuotes> {\n    render() {\n        let {quotes, fetching} = this.props;\n        return (\n            <Layout>\n                <div className=\"container-fluid pt-4 pt-lg-0\">\n                    <div className={\"row\"}>\n                        <SideFilters />\n                        {quotes.length || fetching ? <QuotesContainer quotes={quotes} /> : <NoResults />}\n                    </div>\n                </div>\n            </Layout>\n        );\n    }\n\n    componentDidMount() {\n        let {query} = this.props;\n\n        this.props.fetchQuotes({query: query});\n    }\n\n    componentDidUpdate(prevProps: Readonly<IQuotes>, prevState: Readonly<{}>, snapshot?: any) {\n        let {quotes, maxRequest, fetching} = this.props;\n        let {query} = this.props;\n        /**\n         * la api nos retorna un maximo de 10 quotes\n         * a pesar de que enviamos como parámetro count=15\n         * se realiza un chequeo del limite requerido\n         * de ser menor al limite se traen mas quotes\n         *\n         * se le agrego un MAX_REQUEST debido a que la api\n         * bloquea los request después de llamarla una determinada\n         * cantidad de veces\n         */\n        if (!fetching && quotes.length < LIMIT_QUOTES && maxRequest < MAX_REQUEST) {\n            let requiredLimit = LIMIT_QUOTES - quotes.length;\n            this.props.fetchQuotes({query: query, limit: requiredLimit, append: true});\n        }\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        quotes: state.quotes.data,\n        maxRequest: state.quotes.maxRequest,\n        query: state.quotes.query,\n        fetching: state.quotes.fetching\n    }\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n      fetchQuotes: (params: IFetchQuotesParams) => dispatch(fetchQuotes(params))\n    };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quotes);","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport './App.scss';\nimport './scss/bootstrap.scss'\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\nimport Landing from \"./components/landing/Landing\";\nimport Quotes from \"./components/quotes/Quotes\";\n\nfunction AppRouter() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <Switch>\n                    <Route exact path={\"/quotes/:query?\"} component={Quotes}></Route>\n                    <Route exact path={\"/\"} component={Landing}></Route>\n                    <Route exact render={() => <Redirect to={{pathname: \"/\"}} />} />\n                </Switch>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default AppRouter;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport AppRouter from './AppRouter';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}